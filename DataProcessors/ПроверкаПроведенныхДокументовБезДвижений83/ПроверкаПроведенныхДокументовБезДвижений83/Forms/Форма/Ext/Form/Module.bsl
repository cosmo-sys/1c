
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьФорму();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы
&НаКлиенте
Процедура ПриЗакрытииВыбораСтандартногоПериода(Период, ДопПараметры) Экспорт
	Если Период = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СтандартныйПериодФормы	= Период;
	Объект.НачалоПериода	= СтандартныйПериодФормы.ДатаНачала;
	Объект.КонецПериода		= СтандартныйПериодФормы.ДатаОкончания;
КонецПроцедуры
&НаКлиенте
Процедура ТаблицаДокументовДвиженияПриИзменении(Элемент)
	ТекДанные = Элементы.ТаблицаДокументов.ТекущиеДанные;
	УстановитьПометкуТаблицыДокументов(ТекДанные.ПолучитьИдентификатор());
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура КомандаСформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры
&НаКлиенте
Процедура КомандаПровестиДокументы(Команда)
	ПровестиДокументыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	СтандартныйПериодФормы.ДатаНачала = Объект.НачалоПериода;
	СтандартныйПериодФормы.ДатаОкончания = Объект.КонецПериода;
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = СтандартныйПериодФормы;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытииВыбораСтандартногоПериода", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьФорму()
	
	КартинкаДокумент			= БиблиотекаКартинок.Документ;
	КартинкаРегистрБухгалтерии	= БиблиотекаКартинок.РегистрБухгалтерии;
	КартинкаРегистрНакопления	= БиблиотекаКартинок.РегистрНакопления;
	КартинкаРегистрСведений		= БиблиотекаКартинок.РегистрСведений;
	КартинкаРегистрРасчета		= БиблиотекаКартинок.РегистрРасчета;
	
	ТаблицаДокументов.Очистить();
	Для каждого ДокументМетаданные Из Метаданные.Документы Цикл
		НоваяСтрока				= ТаблицаДокументов.Добавить();
		НоваяСтрока.Имя			= ДокументМетаданные.Имя;
		НоваяСтрока.Синоним		= ДокументМетаданные.Синоним;
		НоваяСтрока.Картинка	= КартинкаДокумент;
		НоваяСтрока.ПолноеИмя	= ДокументМетаданные.ПолноеИмя();
		
		ВременнаяТаблицаДвижений = Новый ТаблицаЗначений();
		ВременнаяТаблицаДвижений.Колонки.Добавить("Имя");
		ВременнаяТаблицаДвижений.Колонки.Добавить("Картинка");
		ВременнаяТаблицаДвижений.Колонки.Добавить("ПолноеИмя");
		
		Для каждого Движение Из ДокументМетаданные.Движения Цикл
			НоваяСтрокаТаблицыДвижений				= ВременнаяТаблицаДвижений.Добавить();
			НоваяСтрокаТаблицыДвижений.Имя			= Движение.Имя;
			НоваяСтрокаТаблицыДвижений.ПолноеИмя	= Движение.ПолноеИмя();
			
			Если Метаданные.РегистрыСведений.Содержит(Движение) Тогда
				НоваяСтрокаТаблицыДвижений.Картинка = КартинкаРегистрСведений;
				
			ИначеЕсли Метаданные.РегистрыНакопления.Содержит(Движение) Тогда
				НоваяСтрокаТаблицыДвижений.Картинка = КартинкаРегистрНакопления;
				
			ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(Движение) Тогда
				НоваяСтрокаТаблицыДвижений.Картинка = КартинкаРегистрБухгалтерии;
				
			ИначеЕсли Метаданные.РегистрыРасчета.Содержит(Движение) Тогда
				НоваяСтрокаТаблицыДвижений.Картинка = КартинкаРегистрРасчета;
			Иначе
				
				ТекстСообщения = СтрШаблон("Необрабатываемый вид движения [%1]", Движение);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ТекстСообщения;
				Сообщение.Сообщить(); 
			КонецЕсли;
		КонецЦикла;
		
		НоваяСтрока.Движения.Загрузить(ВременнаяТаблицаДвижений);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ТаблицуЗначенийВТабличныйДокумент(ТаблицаЗначений)
	// Выведем в отчет результат действий для анализа
	ДокументРезультат = Новый ТабличныйДокумент;
	ИсточникДанных = Новый ОписаниеИсточникаДанных(ТаблицаЗначений);
	
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных			= ИсточникДанных;
	Построитель.ВыводитьЗаголовокОтчета	= Ложь;
	Построитель.ВыводитьОбщиеИтоги		= Истина;
	Построитель.ПолучитьНастройки();
	
	// Ширину колонки ссылки
	НовыйМакет = Построитель.Макет;
	НовыйМакет.НайтиТекст("Ссылка").ШиринаКолонки = 50;
	Построитель.Макет = НовыйМакет;
	
	Построитель.Выполнить();
	Построитель.Вывести(ДокументРезультат);

	Возврат ДокументРезультат;
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
	
	ВыбранныеДокументы = ВыбратьДокументы();
	
	Если ВыбранныеДокументы.Количество() = 0 Тогда
		ТекстСообщения = "Пожалуйста, выберите документы!";
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить(); 
		Возврат ;
	КонецЕсли;
		
	ТекстЗапроса = ТекстЗапросаДляПоискаДокументов(ВыбранныеДокументы);
	Если ПустаяСтрока(ТекстЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Объект.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", НачалоДня(Объект.КонецПериода));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ТаблицаРезультат.Загрузить(РезультатЗапроса);
	ТабличныйДокумент = ТаблицуЗначенийВТабличныйДокумент(РезультатЗапроса);
	
КонецПроцедуры

&НаСервере
Процедура ПровестиДокументыНаСервере()
	Если ТаблицаРезультат.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		ТекстСообщения = "Отсутствуют документы для проведения!";
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли;
	Для каждого ТекущаяСтрока Из ТаблицаРезультат Цикл
		ДокументОбъект = ТекущаяСтрока.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
	Сообщение = Новый СообщениеПользователю;
	ТекстСообщения = "Обработка документов завершена!";
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить(); 
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаДляПоискаДокументов(ВыбранныеДокументы)
	
	ИтоговыйТекстЗапроса = ""; 
	флОбъединениеЗапросов = Ложь; 
	Счетчик = 0;
	Отбор = Новый Структура("Пометка", Истина);
	
	ШаблонЗапроса = ШаблонТекстаЗапроса();

	Для каждого ТекущийДокумент Из ВыбранныеДокументы Цикл
		
		ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "#ИмяДокумента", ТекущийДокумент.ПолноеИмя);
		
		ВыбранныеСтрокиДвижений = ТекущийДокумент.Движения.НайтиСтроки(Отбор);
		Если ВыбранныеСтрокиДвижений.Количество() = 0 Тогда
			ТекстСообщения = СтрШаблон("Выберите движения для проверки по документу %1", ТекущийДокумент.Имя);
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить(); 
			
			Возврат ИтоговыйТекстЗапроса;
		КонецЕсли;
		
		Для каждого СтрокаДвижений Из ВыбранныеСтрокиДвижений Цикл
			
			Если Счетчик > 0 И НЕ флОбъединениеЗапросов Тогда
				флОбъединениеЗапросов = Истина;
			КонецЕсли;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяРегистра",		СтрокаДвижений.ПолноеИмя);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ",		?(Счетчик = 0, "РАЗРЕШЕННЫЕ", ""));
			РазделительОбъединить = ?(флОбъединениеЗапросов, Символы.ПС + " ОБЪЕДИНИТЬ " + Символы.ПС, "");
			ИтоговыйТекстЗапроса = ИтоговыйТекстЗапроса + РазделительОбъединить + ТекстЗапроса;
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ИтоговыйТекстЗапроса;

КонецФункции

&НаСервере
Функция ШаблонТекстаЗапроса()
	
	ШаблонЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПроверяемыйДокумент.Ссылка КАК Ссылка
	|ИЗ
	|	#ИмяДокумента КАК ПроверяемыйДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ИмяРегистра КАК РегистрДвижений
	|		ПО ПроверяемыйДокумент.Ссылка = РегистрДвижений.Регистратор
	|ГДЕ
	|	ПроверяемыйДокумент.Проведен
	|	И РегистрДвижений.Регистратор ЕСТЬ NULL
	|	И ПроверяемыйДокумент.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Возврат ШаблонЗапроса;

КонецФункции

&НаСервере
Функция ВыбратьДокументы()
	
	Отбор = Новый Структура("Пометка", Истина);
	ВыбранныеСтроки = ТаблицаДокументов.НайтиСтроки(Отбор);
	Возврат ВыбранныеСтроки;
КонецФункции

&НаСервере
Процедура УстановитьПометкуТаблицыДокументов(Идентификатор)
	Строка = ТаблицаДокументов.НайтиПоИдентификатору(Идентификатор);
	Строка.Пометка = Истина;
КонецПроцедуры

#КонецОбласти